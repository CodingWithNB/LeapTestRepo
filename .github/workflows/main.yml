name: Test Leapwork Action

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Run Leapwork Automated Test flows, schedule Daily regression
        shell: pwsh
        run: |
          $headers = @{
            "AccessKey" = "ASvAPneQYwUL1VTX"
            "ngrok-skip-browser-warning" = "69420"
          }
          $runScheduleId = "d41f169d-88d5-442e-b8ba-9afe9dc01c3a"
          $url = "https://fba4-202-173-125-59.ngrok-free.app/api/v4/schedules/7fc95621-572e-4da3-9d7b-d98efdd98cc4/runNow"
          $response = Invoke-WebRequest -Uri $url -Method PUT -Headers $headers -ContentType "application/json"

          if ($response.StatusCode -ge 200 -and $response.StatusCode -lt 300) {
              $jsonResponse = $response.Content | ConvertFrom-Json
              $runId = $jsonResponse.runId
              Write-Output "runId: $runId"

              # Save runId to an environment variable for subsequent use
              Write-Output "##[set-output name=run_id;]$runId"
          } else {
              Write-Error "Failed to retrieve runId. HTTP status code: $($response.StatusCode)"
              exit 1
          }

          # Step 2: Call RunItemIds API with obtained runId to get runItemIds
      - name: Get RunItemIds
        id: get_run_item_ids
        run: |
          run_id=$runId
          $url = "https://fba4-202-173-125-59.ngrok-free.app/api/v4/run/$run_id/runItemIds"
          $response = Invoke-WebRequest -Uri $url -Method GET -Headers $headers -ContentType "application/json"
          if ($response.StatusCode -ge 200 -and $response.StatusCode -lt 300) {
              $jsonResponse = $response.Content | ConvertFrom-Json
              $runItemId = $jsonResponse.RunItemIds[0]
              Write-Output "runItemId: $runItemId"

              # Save runId to an environment variable for subsequent use
              Write-Output "##[set-output name=runItemId;]$runItemId"
          } else {
              Write-Error "Failed to retrieve runItemId. HTTP status code: $($response.StatusCode)"
              exit 1
          }
